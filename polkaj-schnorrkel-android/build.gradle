import java.nio.file.Paths

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "com.github.willir.rust.cargo-ndk-android"
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

android {
    ndkVersion System.getenv("ANDROID_NDK_VERSION")

    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java {
                srcDirs = ["../polkaj-schnorrkel-common/src/main/java"]
            }
        }

    }
}


dependencies {
    androidTestImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'commons-codec:commons-codec:20041127.091804'
}

repositories {
    google()
}

clean.doFirst {
    delete "src/main/jniLibs"
}

cargoNdk {
    def rustDir = "${rootDir.absolutePath}/polkaj-schnorrkel-common/src/rust"
    def cargoTarget = "$buildDir/rust"
    def relativeCargoTarget = Paths.get(rustDir).relativize(Paths.get(cargoTarget))

    module = "polkaj-schnorrkel-common/src/rust"
    targetDirectory = relativeCargoTarget.toString()
    extraCargoBuildArguments = ["--target-dir=$relativeCargoTarget"]
    verbose = true
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            mavenAndroid(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = project.group
                artifactId = project.name
                version = project.version

                pom {
                    name = 'Polkadot Java Client'
                    description = 'Java client library to access Polkadot based networks'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                }
            }
        }
    }

}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')

    dryRun=false
    publish=true
    override=true

    publications = ['mavenAndroid']

    pkg {
        userOrg = 'emerald'
        repo = 'polkaj'
        name = project.name
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/emeraldpay/polkaj.git'
        labels = ['polkadot', 'blockchain']
        publicDownloadNumbers = true

        version {
            name = project.version
            description = 'PolkaJ ' + project.version
            released  = new Date()
            vcsTag = project.version

            gpg {
                sign = true
            }
        }
    }
}